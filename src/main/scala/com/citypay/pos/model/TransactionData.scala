/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */

package com.citypay.pos.model

import io.swagger.client.core.ApiModel
import org.joda.time.DateTime
import java.util.UUID

case class TransactionData (
  /* additional data provided within the acquirer response */
  additionalData: Option[String],
  /* Value provided by online processing */
  auxiliaryData: Option[String],
  /* The type of card used such as EMV */
  cardType: Option[String],
  /* The date and time that the transaction was completed in ISO-8166 format */
  completedAt: Option[String],
  /* The date and time that the transaction was created in ISO-8166 format */
  createdAt: Option[String],
  /* The currency symbol used */
  currencySymbol: Option[String],
  /* Boolean value should the transaction be declined by the card */
  declinedByCard: Option[Boolean],
  /* Cryptogram used by the card in processing */
  emvAppCryptogram: Option[String],
  /* Expiry date of the card */
  emvAppExpirationDate: Option[String],
  /* A transaction counter, incremented by the device resulting in a transaction number */
  emvAppTxnCounter: Option[Int],
  /* The amount authorised */
  emvAuthorizedAmount: Option[String],
  /* Verification results within the processing scope */
  emvCardholderVerificationResults: Option[String],
  /* A country code returned by the device */
  emvCountryCode: Option[String],
  /* Cryptogram info returned by the card */
  emvCryptogramInfoData: Option[String],
  /* The application id (AID) identifying the card used */
  emvIccAppid: Option[String],
  /* The interchange profile used */
  emvInterchangeProfile: Option[String],
  /* Application data provided by the issuer */
  emvIssuerAppData: Option[String],
  /* Sequence number provided by the card */
  emvPanSeqNum: Option[String],
  /* Terminal capabilities of the device */
  emvTerminalCapabilities: Option[String],
  /* The terminal type of the device */
  emvTerminalType: Option[String],
  /* TVR provided by the verification process of the transaction */
  emvTerminalVerificationResults: Option[String],
  /* A masked version of the card number */
  emvTrack2Equivalent: Option[String],
  /* ISO currency code of the transaction */
  emvTxnCurrencyCode: Option[String],
  /* ISO date of the transaction */
  emvTxnDate: Option[String],
  /* Status info of the transaction */
  emvTxnStatusInfo: Option[String],
  /* Transacrtion type information returned */
  emvTxnType: Option[String],
  /* The UN or unpredicatble number in the transaction process */
  emvTxnUnpredictableNumber: Option[String],
  /* Determines if the card was a commercial card */
  isCommercialCard: Option[String],
  /* Determines if the card was contactless */
  isContactless: Option[String],
  /* Determines if fallback was used */
  isFallback: Option[String],
  /* Determines if the transaction was authorised offline */
  isOffline: Option[String],
  /* Determines if the transaction was voided */
  isVoided: Option[String],
  /* A response code provided by the acquirer */
  responseCode: Option[String],
  /* The response text returned by the acquirer */
  responseText: Option[String],
  /* A text result of the transaction */
  result: Option[String],
  /* A description of the card scheme for the card */
  scheme: Option[String],
  /* Determines whether a signature was required for legacy systems */
  signatureRequired: Option[String],
  /* The terminal id used from the device */
  terminalId: Option[String],
  /* The total amount processed */
  totalAmount: Option[Int],
  /* The type of transaction processed */
  transactionType: Option[String],
  /* Determines if the transaction was verified by pin entry */
  verifiedByPin: Option[Boolean]
) extends ApiModel


