/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package com.citypay.pos.api

import com.citypay.pos.model.Result
import com.citypay.pos.model.ReversalRequest
import com.citypay.pos.model.SaleRequest
import com.citypay.pos.model.SaleResponse
import com.citypay.pos.model.SuccessResponse
import com.citypay.pos.model.TransactionProgress
import com.citypay.pos.model.TransactionResult
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object PaymentModuleApi {

  /**
   * Reprint a merchant or customer receipt for a transaction that exists on the device (i.e. has not been cleared by End of Day process). 
   * 
   * Expected answers:
   *   code 200 : TransactionResult (Information regarding the progress of the transaction)
   *   code 403 : SuccessResponse (Unauthorized to access the device)
   * 
   * @param body 
   */
  def receipt(body: Option[TransactionProgress] = None): ApiRequest[TransactionResult] =
    ApiRequest[TransactionResult](ApiMethods.POST, "https://pos.citypay.com/citypay-pos-api/1.0.0", "/receipt", "application/json")
      .withBody(body)
      .withSuccessResponse[TransactionResult](200)
      .withErrorResponse[SuccessResponse](403)
        /**
   * Initiates a new refund to a device. The action will contact the device and request a transaction start including the amount and a unique reference to track the transaction through it&#39;s lifecycle. 
   * 
   * Expected answers:
   *   code 200 : SaleResponse (Starts a refund request to the device. The device should be polled using a GET /transaction call)
   *   code 400 :  (bad input parameter)
   *   code 403 : Result (Unauthorized to access the device)
   * 
   * @param body 
   */
  def refund(body: SaleRequest): ApiRequest[SaleResponse] =
    ApiRequest[SaleResponse](ApiMethods.POST, "https://pos.citypay.com/citypay-pos-api/1.0.0", "/refund", "application/json")
      .withBody(body)
      .withSuccessResponse[SaleResponse](200)
      .withErrorResponse[Unit](400)
      .withErrorResponse[Result](403)
        /**
   * Initiates a reversal to a device. No confirmation is made and the transaction reversal process is run. 
   * 
   * Expected answers:
   *   code 200 : SaleResponse (Starts a reversal request to the device. The device should be polled using a GET /transaction call)
   *   code 400 :  (bad input parameter)
   *   code 403 : Result (Unauthorized to access the device)
   * 
   * @param body 
   */
  def reversal(body: ReversalRequest): ApiRequest[SaleResponse] =
    ApiRequest[SaleResponse](ApiMethods.POST, "https://pos.citypay.com/citypay-pos-api/1.0.0", "/reversal", "application/json")
      .withBody(body)
      .withSuccessResponse[SaleResponse](200)
      .withErrorResponse[Unit](400)
      .withErrorResponse[Result](403)
        /**
   * Initiates a new sale to a device. The action will contact the device and request a transaction start including the amount and a unique reference to track the transaction through it&#39;s lifecycle. 
   * 
   * Expected answers:
   *   code 200 : SaleResponse (Starts a sale request to the device. The device should be polled using a GET /transaction call)
   *   code 400 :  (bad input parameter)
   *   code 403 : Result (Unauthorized to access the device)
   * 
   * @param body 
   */
  def sale(body: SaleRequest): ApiRequest[SaleResponse] =
    ApiRequest[SaleResponse](ApiMethods.POST, "https://pos.citypay.com/citypay-pos-api/1.0.0", "/sale", "application/json")
      .withBody(body)
      .withSuccessResponse[SaleResponse](200)
      .withErrorResponse[Unit](400)
      .withErrorResponse[Result](403)
        /**
   * Request the status of a transaction in progress or a complete transaction using the identifier as the reference. Depending on the state of the transaction, the response will indicate if it is not found, in progress (and the current stage in the transaction workflow) or complete (with all transaction data). 
   * 
   * Expected answers:
   *   code 200 : TransactionResult (Information regarding the progress of the transaction)
   *   code 403 : Result (Unauthorized to access the device)
   * 
   * @param body 
   */
  def transaction(body: Option[TransactionProgress] = None): ApiRequest[TransactionResult] =
    ApiRequest[TransactionResult](ApiMethods.POST, "https://pos.citypay.com/citypay-pos-api/1.0.0", "/transaction", "application/json")
      .withBody(body)
      .withSuccessResponse[TransactionResult](200)
      .withErrorResponse[Result](403)
      

}

